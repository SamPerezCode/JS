/*
âœ… MÃ³dulo 3: DOM y Eventos
1. Â¿QuÃ© es el DOM?
El DOM (Document Object Model) es una representaciÃ³n en forma de Ã¡rbol de todo el contenido HTML de la pÃ¡gina.

Es lo que nos permite leer, modificar y escuchar eventos en la pÃ¡gina con JavaScript.

ðŸ“Œ Ejemplo de acceso:
*/

const titulo = document.querySelector("h1");
console.log(titulo.textContent);

/*
2. Seleccionar elementos del DOM
--getElementById
--getElementsByClassName
--querySelector
--querySelectorAll

ðŸ“Œ Ejemplo:
*/
const btn = document.querySelector("#btn");
/*

3. Modificar elementos (propiedades y estilos)
--textContent, innerText, innerHTML
--classList, style, setAttribute, removeAttribute

ðŸ“Œ Ejemplo:
*/
titulo.textContent = "Hola DOM!";
titulo.classList.add("activo");

/*

4. Crear y eliminar elementos

--createElement, appendChild, removeChild, replaceChild
--insertBefore, append, prepend, remove

ðŸ“Œ Ejemplo:
*/

const nuevoParrafo = document.createElement("p");
nuevoParrafo.textContent = "Nuevo pÃ¡rrafo dinÃ¡mico";
document.body.appendChild(nuevoParrafo);

/*
5. Eventos
addEventListener

--Tipos: click, submit, keydown, keyup, mouseover, etc.
--El objeto event

ðŸ“Œ Ejemplo:
*/

btn.addEventListener("click", (event) => {
    console.log("Â¡Hiciste click!", event);
});


/*
6. PropagaciÃ³n de eventos

--Burbuja (bubbling) y captura
--stopPropagation()
*/

/*
7. DelegaciÃ³n de eventos
Ideal para listas o elementos que se crean dinÃ¡micamente

ðŸ“Œ Ejemplo:
*/
document.querySelector("#lista").addEventListener("click", (e) => {
    if (e.target.tagName === "LI") {
        e.target.classList.toggle("seleccionado");
    }
});
/*
8. Formulario y eventos asociados

--submit, change, input, focus, blur
--Validaciones bÃ¡sicas

ðŸ“Œ Ejemplo:
*/
form.addEventListener("submit", (e) => {
    e.preventDefault();
    console.log("Formulario enviado");
});
